workflow:
  rules:
    # Do not run if only markdown files changed
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH'
      changes:
        - "**/*.md"
      when: never
    # Do not run for tags
    - if: '$CI_COMMIT_TAG'
      when: never
    # Do not run for branches with 'test' in the name
    - if: '$CI_COMMIT_BRANCH =~ /test/'
      when: never
    # Run for merge requests
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always
    # Run for pushes to branches WITHOUT open merge requests
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_OPEN_MERGE_REQUESTS == null'
      when: always
     # Run for web-triggered pipelines
    - if: '$CI_PIPELINE_SOURCE == "web"'
      when: always

variables:
  CONTAINER_HOST: cms-cmu
  RECREATE_CONTAINERS: "false"
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_SUBMODULE_DEPTH: 1
  GIT_SUBMODULE_FORCE_HTTPS: "true"
  MKDOCS_VERSION: '1.5.3'
  MATERIAL_VERSION: '9.5.3'
  DATASET: python/metadata/datasets_HH4b_v1p1.yml
  DATASET_RUN3: python/metadata/datasets_synthetic_test_Run3.yml
  # DATASET: metadata/datasets_HH4b_cernbox.yml
  # DATASET_RUN3: metadata/datasets_HH4b_Run3_cernbox.yml

include:
  - local: 'software/dockerfiles/stages_build.yml'
  - local: 'python/workflows/gitlab-CI/stages_*.yml'
  - project: 'authoring/documentation/mkdocs-ci'
    file: 'mkdocs-gitlab-pages.gitlab-ci.yml'

stages:  
  - build
  - proxy
  - code 
  - skimmer-test
  - friendtree-test
  - analysis-test
  - fits
  - plot
  - cutflow
  - classifier  ### needs to be fixed
  - reana
  - deploy
  - validation
  - pages

validation:
  before_script:
    - bash docs/sync_readmes.sh
    - bash docs/update_mkdocs_nav.sh
    - cp docs/mkdocs.yml .
    - cp docs/requirements.txt .
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always
    - when: never

pages:
  before_script:
    - bash docs/sync_readmes.sh
    - bash docs/update_mkdocs_nav.sh
    - cp docs/mkdocs.yml .
    - cp docs/requirements.txt .
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && ($CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master")'
      when: always
    - when: never

.base_analysis:
  needs:
    - voms_proxy
  image: ${CI_REGISTRY_IMAGE}:test
  tags:
    - k8s-cvmfs
  artifacts: 
    expire_in: 1 day
    paths:
      - 'template'
  retry: 2

.base_combine:
  image: gitlab-registry.cern.ch/cms-analysis/general/combine-container:CMSSW_11_3_4-combine_v9.1.0-harvester_v2.1.0
  before_script:
    - source /cvmfs/cms.cern.ch/cmsset_default.sh
    - cd /home/cmsusr/CMSSW_11_3_4/
    - cmsenv || true
    - cd -
  tags:
    - k8s-cvmfs

.base_classifier:
  needs:
    - voms_proxy
  image: registry.hub.docker.com/chuyuanliu/heptools:ml-cpu # TODO change to central repo
  before_script:
    - source /entrypoint.sh
  tags:
    - k8s-cvmfs
  artifacts:
    expire_in: 1 day



