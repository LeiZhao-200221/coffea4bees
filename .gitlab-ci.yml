workflow:
  rules:
    # here the order matter!
    # does not run with changes in .md files
    - if: '$CI_COMMIT_BRANCH && $CI_COMMIT_BEFORE_SHA !~ /0{40}/'
      changes:
        - "{*[^.]md*,*.[^m]*,*.m,*.m[^d]*,*.md?*,*[^d]}"
      when: never
    # does not run when creating tags
    - if: $CI_COMMIT_TAG
      when: never
    # does not run if branches start with test_
    - if: $CI_COMMIT_BRANCH =~ /test_/
      when: never
    # it runs with any branch
    - if: $CI_COMMIT_BRANCH

variables:
  CONTAINER_HOST: cms-cmu

stages:          
  - build
  - proxy
  - code 
  - skimmer-test
  - analysis-test
  - fits
  - plot
  - cutflow
  - reana

voms_proxy:
  stage: proxy
  image: gitlab-registry.cern.ch/cms-cloud/cmssw-docker/cc7-cms:2024-04-30-3de95a51
  artifacts:
    paths:
      - proxy
  script:
    - mkdir -p ${HOME}/.globus
    - printf "${GRID_USERCERT}" | base64 -d > ${HOME}/.globus/usercert.pem
    - printf "${GRID_USERKEY}" | base64 -d > ${HOME}/.globus/userkey.pem
    - chmod 400 ${HOME}/.globus/userkey.pem
    - printf "${GRID_PASSWORD}" | base64 -d | voms-proxy-init --voms cms --pwstdin
    - voms-proxy-info --all
    - export VOMSPROXY=$(voms-proxy-info -path)
    - mkdir proxy
    - cp ${VOMSPROXY} proxy/x509_proxy


#### from https://gitlab.cern.ch/gitlabci-examples/build_docker_image/-/blob/master/.gitlab-ci.yml?ref_type=heads
.base_build_container:
    stage: build
    variables:
      # To push to a specific docker tag other than latest(the default), amend the --destination parameter, e.g. --destination $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
      # See https://docs.gitlab.com/ee/ci/variables/predefined_variables.html#variables-reference for available variables
      DOCKER_FILE: 'DOCKER_FILE'
      IMAGE_DESTINATION_LATEST: 'IMAGELATEST'
      IMAGE_DESTINATION: 'IMAGE'
    image: 
        # The kaniko debug image is recommended because it has a shell, and a shell is required for an image to be used with GitLab CI/CD.
        name: gcr.io/kaniko-project/executor:debug
        entrypoint: [""]
    script:
        # Prepare Kaniko configuration file
        - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
        # Build and push the image from the Dockerfile at the root of the project.
        - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $DOCKER_FILE --destination $IMAGE_DESTINATION --destination $IMAGE_DESTINATION_LATEST
        # Print the full registry path of the pushed image
        - echo "Image pushed successfully to ${IMAGE_DESTINATION}"
    rules:
      - if: $CI_COMMIT_BRANCH =~ /^container.*/ 
      - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^container.*/'

build_container_lpccondor:
  extends:
    - .base_build_container
  variables:
      # To push to a specific docker tag other than latest(the default), amend the --destination parameter, e.g. --destination $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
      # See https://docs.gitlab.com/ee/ci/variables/predefined_variables.html#variables-reference for available variables
      DOCKER_FILE: $CI_PROJECT_DIR/.dockerfiles/Dockerfile_analysis
      IMAGE_DESTINATION_LATEST: ${CI_REGISTRY_IMAGE}:latest
      IMAGE_DESTINATION: ${CI_REGISTRY_IMAGE}:$CI_COMMIT_SHORT_SHA

build_container_reana:
  extends:
    - .base_build_container
  variables:
      # To push to a specific docker tag other than latest(the default), amend the --destination parameter, e.g. --destination $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
      # See https://docs.gitlab.com/ee/ci/variables/predefined_variables.html#variables-reference for available variables
      DOCKER_FILE: $CI_PROJECT_DIR/.dockerfiles/Dockerfile_analysis_reana
      IMAGE_DESTINATION_LATEST: ${CI_REGISTRY_IMAGE}:reana_latest
      IMAGE_DESTINATION: ${CI_REGISTRY_IMAGE}:reana_$CI_COMMIT_SHORT_SHA

.base_analysis:
  needs:
    - voms_proxy
  image: gitlab-registry.cern.ch/$CONTAINER_HOST/coffea4bees:latest
  tags:
    - k8s-cvmfs
  artifacts: 
    expire_in: 1 day
    paths:
      - 'template'

analysis-test-job:   
  stage: analysis-test   
  extends:
    - .base_analysis
  script:
    - source .ci-workflows/analysis-test-job.sh
  artifacts: 
    paths:
      - python/analysis/hists/test.coffea

analysis-test-job-unsup:   
  stage: analysis-test   
  extends:
    - .base_analysis
  script:
    - source .ci-workflows/analysis-test-job-unsup.sh
  artifacts: 
    paths:
      - python/analysis/hists/test_unsup.coffea

analysis-test-mixed-job:   
  stage: analysis-test   
  extends:
    - .base_analysis
  script:
    - source .ci-workflows/analysis-test-mixed-job.sh
  artifacts: 
    paths:
      - python/analysis/hists/testMixedBkg_TT.coffea
      - python/analysis/hists/testMixedBkg_data_3b_for_mixed.coffea
      - python/analysis/hists/testMixedData.coffea
      - python/analysis/hists/testMixedBkg_TT.json
      - python/analysis/hists/testMixedBkg_data_3b_for_mixed.json
      - python/analysis/hists/testMixedData.json
      - python/analysis/hists/testSignal_preUL.coffea
      - python/analysis/hists/testSignal_preUL.json
      - python/analysis/hists/testSignal_UL.coffea
      - python/analysis/hists/testSignal_UL.json


analysis-systematics-test-job:   
  stage: analysis-test   
  extends:
    - .base_analysis
  script:
    - source .ci-workflows/analysis-systematics-test-job.sh
  artifacts: 
    paths:
      - python/analysis/hists/test_systematics.coffea

skimmer-test-job:   
  stage: skimmer-test   
  extends:
    - .base_analysis
  script:
    - source .ci-workflows/skimmer-test-job.sh
  artifacts: 
    paths:
      - python/skimmer/metadata/picoaod_datasets_TTToSemiLeptonic_UL18.yml
      - python/skimmer/TTToSemiLeptonic_UL18/picoAOD.root

skimmer-analysis-test-job:   
  stage: analysis-test   
  extends:
    - .base_analysis
  needs: 
    - voms_proxy
    - skimmer-test-job
  script:
    - source .ci-workflows/skimmer-analysis-test-job.sh
  artifacts: 
    paths:
      - python/analysis/hists/test_skimmer.coffea

analysis-plot-job:    
  stage: plot 
  extends:
    - .base_analysis
  needs: 
    - analysis-test-job
  script:
    - source .ci-workflows/analysis-plot-job.sh
  artifacts:
    paths:
      - python/analysis/testCoffeaPlots/RunII/

analysis-plot-job-unsup:    
  stage: plot 
  extends:
    - .base_analysis
  needs: 
    - analysis-test-job-unsup
  script:
    - source .ci-workflows/analysis-plot-job-unsup.sh
  artifacts:
    paths:
      - python/analysis/testCoffeaPlots/RunII/

analysis-cutflow-job:    
  stage: cutflow
  extends:
    - .base_analysis
  needs: 
    - analysis-test-job
  script:
    - source .ci-workflows/analysis-cutflow-job.sh
  artifacts:
    paths:
      - python/analysis/tests/test_dump_cutflow.yml

analysis-mixed-cutflow-job:    
  stage: cutflow
  extends:
    - .base_analysis
  needs: 
    - analysis-test-mixed-job
  script:
    - source .ci-workflows/analysis-mixed-cutflow-job.sh
  artifacts:
    paths:
      - python/analysis/tests/test_dump_cutflow_mixed_data.yml
      - python/analysis/tests/test_dump_cutflow_mixed_bkg.yml

###skimmer-analysis-cutflow-job:    
###  stage: cutflow
###  extends:
###    - .base_analysis
###  needs: 
###    - skimmer-analysis-test-job
###  script:
###    - source .ci-workflows/skimmer-analysis-cutflow-job.sh
###  artifacts:
###    paths:
###      - python/analysis/tests/test_dump_skimmer_cutflow.yml

analysis-systematics-cutflow-job:    
  stage: cutflow
  extends:
    - .base_analysis
  needs: 
    - analysis-systematics-test-job
  script:
    - source .ci-workflows/analysis-systematics-cutflow-job.sh
  artifacts:
    paths:
      - python/analysis/tests/test_systematics_dump_cutflow.yml

analysis-cutflow-job-unsup:    
 stage: cutflow
 extends:
   - .base_analysis
 needs: 
   - analysis-test-job-unsup
 script:
   - source .ci-workflows/analysis-cutflow-job-unsup.sh
 artifacts:
   paths:
     - python/analysis/tests/test_dump_cutflow_job_unsup.yml

analysis-cutflow-job:    
  stage: cutflow
  extends:
    - .base_analysis
  needs: 
    - analysis-test-job
  script:
    - source .ci-workflows/analysis-cutflow-job.sh
  artifacts:
    paths:
      - python/analysis/tests/test_dump_cutflow.yml

analysis-makeweights-job:    
  stage: fits
  extends:
    - .base_analysis
  needs: 
    - analysis-test-job
  script:
    - source .ci-workflows/analysis-makeweights-job.sh
  artifacts:
    paths:
      - python/analysis/testJCM_Coffea/

analysis-helpers-job:    
  stage: code
  extends:
    - .base_analysis
  script:
    - source .ci-workflows/analysis-helpers-job.sh


analysis-iplot-job:    
  stage: plot 
  extends:
    - .base_analysis
  needs:
    - analysis-test-job
  script:
    - source .ci-workflows/analysis-iplot-job.sh

baseclass-test-job:   
  stage: plot
  extends:
    - .base_analysis
  needs: 
    - analysis-test-job
  script:
    - source .ci-workflows/baseclass-test-job.sh

histtojson-test-job:   
  stage: plot
  extends:
    - .base_analysis
  needs: 
    - analysis-test-job
  script:
    - cd python/stats_analysis/
    - python convert_hist_to_json.py -o hists/histAll.json -i ../analysis/hists/test.coffea
  artifacts: 
    paths:
      - python/stats_analysis/hists/histAll.json

.base_combine:
  image: gitlab-registry.cern.ch/cms-analysis/general/combine-container:CMSSW_11_3_4-combine_v9.1.0-harvester_v2.1.0
  before_script:
    - source /cvmfs/cms.cern.ch/cmsset_default.sh
    - cd /home/cmsusr/CMSSW_11_3_4/
    - cmsenv || true
    - cd -
  tags:
    - k8s-cvmfs

twoStageClosure-test-job:   
  stage: fits
  extends:
    - .base_combine
  needs: 
    - analysis-test-mixed-job
  script:
    - source .ci-workflows/analysis-runTwoStageClosure-ROOT.sh

reana-job:
  stage: reana
  image: gitlab-registry.cern.ch/$CONTAINER_HOST/coffea4bees:reana_latest
  tags:
    - k8s-cvmfs
  script:
    - source .ci-workflows/reana-job.sh
  allow_failure: true
